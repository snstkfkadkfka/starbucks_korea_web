{"version":3,"sources":["src/js/main.js"],"names":["badgeEl","document","querySelector","toTopEl","window","addEventListener","_","throttle","scrollY","gsap","to","opacity","display","x","scrollTo","fadeIns","querySelectorAll","forEach","fadeEl","index","delay","swiper","Swiper","direction","autoplay","loop","swiper2","slidesPerView","spaceBetween","centeredSlides","pagination","el","clickable","navigation","prevEl","nextEl","swiper3","promotionEl","promotionToggleBtn","isHidePeomotion","random","min","max","parseFloat","Math","toFixed","floatingObject","selector","size","y","repeat","yoyo","ease","Power1","easeInOut","classList","add","remove","spyEls","spyEl","ScrollMagic","Scene","triggerElement","triggerHook","setClassToggle","addTo","Controller"],"mappings":";AAEA,IAAMA,EAAUC,SAASC,cAAc,kBAGjCC,EAAUF,SAASC,cAAc,WAMvCE,OAAOC,iBAAiB,SAASC,EAAEC,SAAS,WAGvCH,OAAOI,QAAQ,KAKhBC,KAAKC,GAAGV,EAAS,GAAI,CACnBW,QAAU,EACVC,QAAU,SAEZH,KAAKC,GAAGP,EAAS,GAAI,CACnBU,EAAE,EACFF,QAAQ,MAIVF,KAAKC,GAAGV,EAAS,GAAI,CACnBW,QAAU,EACVC,QAAU,UAEZH,KAAKC,GAAGP,EAAS,GAAI,CACnBU,EAAE,IACFF,QAAQ,MAGZ,MAGFR,EAAQE,iBAAiB,QAAQ,WAC/BI,KAAKC,GAAGN,OAAQ,GAAI,CAElBU,SAAW,MAMf,IAAMC,EAAQd,SAASe,iBAAiB,qBACxCD,EAAQE,QAAQ,SAASC,EAAOC,GAE9BV,KAAKC,GAAGQ,EAAO,EAAE,CAGfE,MAAqB,IAAbD,EAAQ,GAChBR,QAAS,MAKb,IAAMU,EAAS,IAAIC,OAAO,uBAAuB,CAC/CC,UAAY,WACZC,UAAW,EACXC,MAAO,IAIHC,EAAU,IAAIJ,OAAO,qBAAsB,CAE/CK,cAAe,EACfC,aAAc,GACdC,gBAAgB,EAChBJ,MAAM,EACND,SAAU,CACRJ,MAAO,KAETU,WAAY,CACVC,GAAI,gCAEJC,WAAW,GAEbC,WAAY,CACVC,OAAQ,iCACRC,OAAQ,oCAKNC,EAAU,IAAId,OAAO,kBAAkB,CAC3CE,UAAS,EACTC,MAAO,EACPG,aAAe,GACfD,cAAgB,EAChBM,WAAa,CACXC,OAAO,8BACPC,OAAO,iCAKLE,EAAYpC,SAASC,cAAc,cACnCoC,EAAqBrC,SAASC,cAAc,qBAC9CqC,GAAgB,EAYpB,SAASC,EAAOC,EAAKC,GAGnB,OAAOC,YAAYC,KAAKJ,UAAYE,EAAMD,GAAOA,GAAKI,QAAQ,IAKhE,SAASC,EAAeC,EAAS3B,EAAM4B,GACrCvC,KAAKC,GAAGqC,EAASP,EAAO,IAAI,KAAK,CAC/BS,EAAED,EACFE,QAAU,EACVC,MAAO,EAEPC,KAAOC,OAAOC,UACdlC,MAAMoB,EAAO,EAAEpB,KA1BnBkB,EAAmBjC,iBAAiB,QAAQ,YAC1CkC,GAAmBA,GAEjBF,EAAYkB,UAAUC,IAAI,QAE1BnB,EAAYkB,UAAUE,OAAO,UAyBjCX,EAAe,gBAAiB,EAAG,IACnCA,EAAe,gBAAiB,GAAK,IACrCA,EAAe,gBAAiB,IAAK,IAGrC,IAAMY,EAAOzD,SAASe,iBAAiB,sBACvC0C,EAAOzC,QAAQ,SAAS0C,GAGtB,IAAIC,YACHC,MAAM,CAELC,eAAiBH,EAGjBI,YAAc,KAEfC,eAAeL,EAAM,QACrBM,MAAM,IAAIL,YAAYM","file":"main.2eb371cc.js","sourceRoot":"..","sourcesContent":["\r\n//* 스크롤 값에 따라 배지영역이 보이거나 안보이게 처리\r\nconst badgeEl = document.querySelector('header .badges');\r\n\r\n/* top scroll button */\r\nconst toTopEl = document.querySelector('#to-top');\r\n\r\n// 스크롤 이벤트가 발생하면 매번 값을 반환하는 것이 아닌 \r\n// 콜백함수로 lodash의 throttle을 사용하여 \r\n// 0.3초마다 실행한 결과를 반황하도록 처리\r\n// _.throttle(콜백함수, 시간);\r\nwindow.addEventListener(\"scroll\",_.throttle(function(){\r\n  // 스크롤 값이 500이상이면 보이지 않게 처리 \r\n  // 그렇지 않다면 보이게 처리\r\n  if(window.scrollY>500){\r\n    // badgeEl.style.display=\"none\"\r\n\r\n    // 스크롤 값이 500이상이 되면 단순하게 보이게 처리하는 것이 아닌 부드러운 효과를 적용하고자 한다.\r\n    // gsap.to(요소, 지속시간, {옵션})\r\n    gsap.to(badgeEl, .6, {\r\n      opacity : 0,\r\n      display : \"none\"\r\n    })\r\n    gsap.to(toTopEl, .7, {\r\n      x:0,\r\n      opacity:1\r\n    });\r\n  }else{\r\n    // badgeEl.style.display=\"block\"\r\n    gsap.to(badgeEl, .6, {\r\n      opacity : 1,\r\n      display : \"block\"\r\n    });\r\n    gsap.to(toTopEl, .7, {\r\n      x:100,\r\n      opacity:0\r\n    })\r\n  }\r\n},300));\r\n\r\n/* top button click event-> sceoll to top */\r\ntoTopEl.addEventListener('click',function(){\r\n  gsap.to(window, .7, {\r\n    /* plugin이 연결되어야 작동 */\r\n    scrollTo : 0\r\n  });\r\n});\r\n\r\n//visual 영역의 이미지를 순차적으로 보이게 처리\r\n//이미지 영역을 fade--in으로 그룹처리한 이유가 된다.\r\nconst fadeIns=document.querySelectorAll('.visual .fade--in');\r\nfadeIns.forEach(function(fadeEl,index){\r\n  //gsap.to(요소, ㅈ지속시간, {옵션})\r\n  gsap.to(fadeEl,1,{\r\n    //index를 활용해서 순차적으로 화면에 출력\r\n    //0.7, 1.4, 2.1, 2.8\r\n    delay: (index + 1) * 0.7,\r\n    opacity: 1\r\n  })\r\n})\r\n\r\n// 공지사항 부분의 슬라이드 구현\r\nconst swiper = new Swiper('.notice-line .swiper',{\r\n  direction : 'vertical',\r\n  autoplay : true,\r\n  loop : true\r\n})\r\n\r\n// promotion swiper\r\nconst swiper2 = new Swiper('.promotion .swiper' ,{\r\n  // direction: 'horizontal',\r\n  slidesPerView: 3, // 보여줄 요소 3개\r\n  spaceBetween: 10, // 슬라이드 사이의 여백\r\n  centeredSlides: true, // 1번 슬라이드 가운데\r\n  loop: true,\r\n  autoplay: {\r\n    delay: 5000\r\n  },\r\n  pagination: {\r\n    el: '.promotion .swiper-pagination',\r\n    // 페이지 표시(원)를 클릭하면 해당하는 슬라이드로 이동\r\n    clickable: true \r\n  },\r\n  navigation: {\r\n    prevEl: '.promotion .swiper-button-prev',\r\n    nextEl: '.promotion .swiper-button-next'\r\n  }\r\n});\r\n\r\n// awards swiper\r\nconst swiper3 = new Swiper('.awards .swiper',{\r\n  autoplay:true,\r\n  loop : true,\r\n  spaceBetween : 30,\r\n  slidesPerView : 5,\r\n  navigation : {\r\n    prevEl:\".awards .swiper-button-prev\",\r\n    nextEl:\".awards .swiper-button-next\"\r\n  }\r\n})\r\n\r\n// *토글버튼을 클릭하면 promotion 영역 닫함 & 열림\r\nconst promotionEl=document.querySelector('.promotion');\r\nconst promotionToggleBtn = document.querySelector(\".toggle-promotion\")\r\nlet isHidePeomotion=false;\r\npromotionToggleBtn.addEventListener(\"click\",function(){\r\n  isHidePeomotion = !isHidePeomotion;//토글에 많이 사용\r\n  if(isHidePeomotion){\r\n    promotionEl.classList.add('hide');\r\n  }else{\r\n    promotionEl.classList.remove('hide')\r\n  }\r\n})\r\n\r\n// 범위 내의 숫자를 랜덤 함수(숫자 2자리까지)\r\n// random 함수 인자 최소값 최대값\r\nfunction random(min, max){\r\n  //.toFixed()를 통한 반환된 문자 데이터\r\n  // parseFloat()를 통해 소수점을 가지고 숫자 데이터로 반환\r\n  return parseFloat((Math.random() * (max - min) + min).toFixed(2));\r\n};\r\n\r\n// 유튜부 위 이미지 애니메이션 효과\r\n// gsap.to(요소, 지속시간,{옵션})\r\nfunction floatingObject(selector,delay,size){\r\n  gsap.to(selector,random(1.5,2.5),{\r\n    y:size,\r\n    repeat : -1,//무한 반복, 자바스크립트에서 지원하는 동작\r\n    yoyo : true, //한전 재생된 애니메이션을 다시 실행\r\n    //gsap의 easeing효과 \r\n    ease : Power1.easeInOut,\r\n    delay:random(0,delay)\r\n  });\r\n}\r\n\r\nfloatingObject('img.floating1', 1, 15);  \r\nfloatingObject('img.floating2', 0.5, 15);  \r\nfloatingObject('img.floating3', 1.5, 20);  \r\n\r\n/* scrollMagic */\r\nconst spyEls=document.querySelectorAll('section.scroll-spy');\r\nspyEls.forEach(function(spyEl){\r\n  //Scene() 메소드를 통해 여러 객체들을 변환에 대한 감시 옵션\r\n  //addTo() 라이브러리를 사용하디 위한 옵션들\r\n  new ScrollMagic\r\n  .Scene({\r\n    //보여질 여부를 검사, 요소를 지정\r\n    triggerElement : spyEl,\r\n    // 화면의 높이를 0에서 1이라 가정하면 적용위치점을 0.8위치에 적용\r\n    // 기능이 걸려 있는 부분(실행 위치)\r\n    triggerHook : .8\r\n  })\r\n  .setClassToggle(spyEl,'show')//show 클래스를 높이에 따라 추가/삭제\r\n  .addTo(new ScrollMagic.Controller());//새롭게 객체를 생성, 객체를 감시/제어\r\n})\r\n\r\n"]}